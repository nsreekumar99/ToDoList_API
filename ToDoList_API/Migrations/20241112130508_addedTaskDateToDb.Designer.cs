// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ToDoList_API.Data;

#nullable disable

namespace ToDoList_API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241112130508_addedTaskDateToDb")]
    partial class addedTaskDateToDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ToDoList_API.Models.ToDoListM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly?>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateOnly>("TaskDate")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("UpdatedDate")
                        .HasColumnType("date");

                    b.Property<bool?>("isChecked")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("ToDoListM");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateOnly(2024, 11, 12),
                            Name = "Test 1",
                            TaskDate = new DateOnly(2024, 12, 1),
                            isChecked = false
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateOnly(2024, 11, 12),
                            Name = "Test 2",
                            TaskDate = new DateOnly(2024, 12, 2),
                            isChecked = true
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
